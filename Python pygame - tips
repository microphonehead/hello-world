Source: http://nullege.com/codes/show/src@p@y@pygame_cffi-HEAD@test@rect_test.py/660/pygame.Rect.fit
	start = time.time()
        tempimg = pygame.transform.scale(image, (shrinkx, shrinky))
        duration += (time.time() - start)
        del tempimg

Source: http://nullege.com/codes/show/src@p@y@pygame_cffi-HEAD@test@rect_test.py/660/pygame.Rect.fit
  screen.fill ((100, 100, 100))

Source: https://www.pygame.org/docs/ref/rect.html
The Rect object has several virtual attributes which can be used to move and align the Rect:
	x,y
	top, left, bottom, right
	topleft, bottomleft, topright, bottomright
	midtop, midleft, midbottom, midright
	center, centerx, centery
	size, width, height
	w,h

Source: https://www.pygame.org/docs/ref/mixer.html#pygame.mixer.get_busy
 stop()
    stop sound playback
    stop() -> None

    This will stop the playback of this Sound on any active Channels.

 fadeout()
    stop sound playback after fading out
    fadeout(time) -> None

    This will stop playback of the sound after fading it out over the time argument in milliseconds. The Sound will fade and stop on all actively playing channels.

Source: https://www.pygame.org/docs/ref/music.html#pygame.mixer.music.load
 pygame.mixer.music.play()
    Start the playback of the music stream
    play(loops=0, start=0.0) -> None

 pygame.mixer.music.stop()
    stop the music playback
    stop() -> None

    Stops the music playback if it is currently playing.

 pygame.mixer.stop()
    stop playback of all sound channels
    stop() -> None

    This will stop all playback of all active mixer channels.

 pygame.mixer.fadeout()Â¶
    fade out the volume on all sounds before stopping
    fadeout(time) -> None

    This will fade out the volume on all active channels over the time argument in milliseconds. After the sound is muted the playback will stop.

Transparent bitmaps: 
--------------------
Source: http://programarcadegames.com/index.php?lang=en&chapter=bitmapped_graphics_and_sound
Descripton:
to enable images to be painted to the screen, with a 
transparent background image (black).
Code:
>>>player_image.set_colorkey(BLACK)